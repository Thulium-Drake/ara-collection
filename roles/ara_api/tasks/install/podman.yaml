---
- name: Detecting existing PyPI installation
  ansible.builtin.stat:
    path: "{{ ara_api_venv_path }}"
  register: existing_pypi_install

- name: Notify about existing PyPI installation
  ansible.builtin.debug:
    msg: |
      You seem to have ARA-API installed via PyPI in the past, you might
      want to clean up that installation and migrate your data
  when: existing_pypi_install['stat']['exists']

- name: Ensure Podman Quadlet for Volume
  containers.podman.podman_volume:
    name: ara-api
    state: quadlet

- name: Ensure Podman Quadlet for Container
  containers.podman.podman_container:
    name: ara-api
    image: "{{ ara_api_image }}"
    state: quadlet
    ports:
      - '127.0.0.1:8000:8000'
    volumes:
      - "ara-api.volume:/opt/ara{{ (ansible_facts['selinux']['status'] == 'enabled') | ternary(':Z', '') }}"
    quadlet_options:
      - 'AutoUpdate=registry'
      - 'Pull=newer'
      - |
        [Install]
        WantedBy=default.target

- name: Ensure Podman Quadlet for Volume
  containers.podman.podman_volume_info:
    name: ara-api
  register: ara_api_podman_volume

- name: Set ara_api_root dir with path from Volume
  ansible.builtin.set_fact:
    ara_api_root_dir: "{{ ara_api_podman_volume['volumes'][0]['Mountpoint'] }}"

- name: Ensure directories in volume
  ansible.builtin.file:
    path: "{{ ara_api_root_dir }}/logs"
    state: 'directory'
    owner: root
    group: root
    mode: '0755'

- name: Override file locations with path in container
  ansible.builtin.set_fact:
    ara_api_database_name: "/opt/ara/ansible.sqlite"
    ara_api_log_dir: "/opt/ara/logs"
    ara_api_settings: "{{ ara_api_root_dir }}/settings.yaml"

- name: Ensure service
  ansible.builtin.systemd:
    name: ara-api.service
    state: started
    enabled: true
    daemon_reload: true
